<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <version>1.0.0</version>
    <!-- Spring Boot parent configuration -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.2</version>
        <relativePath/><!-- lookup parent from repository -->
    </parent>
    <!-- Project information -->
    <groupId>fr.softsf</groupId>
    <artifactId>SudokuFX</artifactId>
    <name>Sudoku</name>
    <organization>
        <name>Soft64.fr</name>
    </organization>
    <!-- Developer information -->
    <developers>
        <developer>
            <email>soft64.fr@gmail.com</email>
            <timezone>+1</timezone>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>
    <!-- Project properties -->
    <properties>
        <deployment-folder>output</deployment-folder>
        <java.version>21</java.version>
        <javafx.version>23.0.2</javafx.version>
        <macos-package-id>fr.soft64.sudokufx</macos-package-id>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <sonar.organization>lob2018</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <start-class>fr.softsf.sudokufx.Launcher</start-class>
    </properties>
    <!-- Project dependencies -->
    <dependencies>
        <!-- JavaFX dependencies -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <!-- Ignite Spring dependency -->
        <dependency>
            <groupId>com.gluonhq</groupId>
            <artifactId>ignite-spring</artifactId>
            <version>1.2.2</version>
        </dependency>
        <!-- Spring Boot dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- HSQLDB database dependency -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.7.4</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Flyway database migration dependencies -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-hsqldb</artifactId>
            <version>11.3.3</version>
        </dependency>
        <!-- Lombok for reducing boilerplate code -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.36</version>
        </dependency>
        <!-- Passay for password validation -->
        <dependency>
            <groupId>org.passay</groupId>
            <artifactId>passay</artifactId>
            <version>1.6.6</version>
        </dependency>
        <!-- MapStruct used to create DTOs -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>1.6.3</version>
        </dependency>
        <!-- TestFX for JavaFX testing -->
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit5</artifactId>
            <version>4.0.18</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <!-- Build configuration -->
    <build>
        <plugins>
            <!-- Java compiler plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>1.6.3</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!-- JavaFX Maven plugin -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <jlinkVerbose>true</jlinkVerbose>
                    <mainClass>${start-class}</mainClass>
                    <options>
                        <option>-Dapp.name=${project.artifactId}</option>
                        <option>-Dapp.version=${project.version}</option>
                    </options>
                </configuration>
            </plugin>
            <!-- Spring Boot Maven Plugin for uberjar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>${start-class}</mainClass>
                    <jvmArguments>
                        <jvmArgument>-Dapp.name=${project.artifactId}</jvmArgument>
                        <jvmArgument>-Dapp.version=${project.version}</jvmArgument>
                    </jvmArguments>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- JaCoCo plugin for code coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <configuration>
                    <excludes>
                        <exclude>fr/softsf/sudokufx/Launcher.class</exclude>
                        <exclude>fr/softsf/sudokufx/SudoMain.class</exclude>
                        <exclude>fr/softsf/sudokufx/view/**</exclude>
                        <exclude>fr/softsf/sudokufx/model/**</exclude>
                        <exclude>fr/softsf/sudokufx/dto/**</exclude>
                        <exclude>fr/softsf/sudokufx/interfaces/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>jacoco.argLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>PACKAGE</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.80</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Surefire plugin for running tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.2</version>
                <configuration>
                    <argLine>@{jacoco.argLine} -Dapp.name=${project.artifactId} -Dapp.version=${project.version}
                    </argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!-- Exec plugin to generate Doxygen documentation for id:generate-docs -->
        <profile>
            <id>generate-docs</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <id>exec-generate-doxygen-docs</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>doxygen</executable>
                                    <arguments>
                                        <argument>Doxyfile</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>exec-git-add-all</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>git</executable>
                                    <arguments>
                                        <argument>add</argument>
                                        <argument>-A</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Exec plugin for running external scripts for RELEASES, suitable for id:windows, id:linux, id:mac operating systems -->
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <!-- Windows package using batch script -->
                                <id>exec-batch</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>cmd</executable>
                                    <arguments>
                                        <argument>/c</argument>
                                        <argument>.myresources\scripts\windowsRelease.bat</argument>
                                        <argument>${project.artifactId}</argument>
                                        <argument>${project.version}</argument>
                                        <argument>${project.organization.name}</argument>
                                        <!-- The main module to execute -->
                                        <argument>${start-class}</argument>
                                        <argument>${java.version}</argument>
                                        <argument>${deployment-folder}</argument>
                                        <argument>${maven.build.timestamp}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>linux</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <!-- Linux package using shell script -->
                                <id>exec-linux-shell</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>.myresources/scripts/linuxRelease.sh</argument>
                                        <argument>${project.artifactId}</argument>
                                        <argument>${project.version}</argument>
                                        <argument>${project.organization.name}</argument>
                                        <!-- The main module to execute -->
                                        <argument>${start-class}</argument>
                                        <argument>${java.version}</argument>
                                        <argument>${deployment-folder}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <!-- macOS package using shell script -->
                                <id>exec-macos-shell</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>.myresources/scripts/macosRelease.sh</argument>
                                        <argument>${project.artifactId}</argument>
                                        <argument>${project.version}</argument>
                                        <argument>${project.organization.name}</argument>
                                        <!-- The main module to execute -->
                                        <argument>${start-class}</argument>
                                        <argument>${java.version}</argument>
                                        <argument>${deployment-folder}</argument>
                                        <argument>${macos-package-id}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>mac-x86_64</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <!-- macOS package using shell script for x86_64 -->
                                <id>exec-macos-x86_64-shell</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>.myresources/scripts/macosRelease-x86_64.sh</argument>
                                        <argument>${project.artifactId}</argument>
                                        <argument>${project.version}</argument>
                                        <argument>${project.organization.name}</argument>
                                        <!-- The main module to execute -->
                                        <argument>${start-class}</argument>
                                        <argument>${java.version}</argument>
                                        <argument>${deployment-folder}</argument>
                                        <argument>${macos-package-id}</argument>
                                        <argument>x86_64</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
